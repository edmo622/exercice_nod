# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: Node.js CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [18.x, 20.x, 22.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v4
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v4
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: npm run build --if-present
#     - run: npm test
name: Node.js CI

on:
  push:
    branches: ['**']  # Exécuté pour toutes les branches
  pull_request:
    branches: ['**']  # Exécuté pour toutes les branches

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
      id: setup-node  # Ajout d'un ID pour référence
    
    - name: Get branch name
      run: echo "BRANCH_NAME=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV
      shell: bash
    
    - name: Print environment info
      run: |
        echo "Running on Node.js ${{ matrix.node-version }}"
        echo "Branch: ${{ env.BRANCH_NAME }}"
        echo "Runner OS: ${{ runner.os }}"
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build --if-present
    
    - name: Run tests
      run: npm test
    
    - name: Completion message
      run: echo "CI completed for ${{ env.BRANCH_NAME }} branch with Node.js ${{ matrix.node-version }}"